From b2c4f6d4d1b5ce9fb78bd075b21b037bbe650b0e Mon Sep 17 00:00:00 2001
From: Utsav Agarwal <utsav.agarwal@analog.com>
Date: Fri, 8 Aug 2025 12:54:53 +0100
Subject: [PATCH] fix: Rpmsg: Updating rpmsg driver for kernel 6.12

This is a temporary fix that refreshes the rpmsg kernel driver.
This is essential for enabling SHARC-ALSA audio.

Signed-off-by: Utsav Agarwal <utsav.agarwal@analog.com>
---
 arch/arm64/boot/dts/adi/sc598-som-ezkit.dts  |  5 +--
 arch/arm64/boot/dts/adi/sc598-som.dtsi       | 12 +++----
 arch/arm64/boot/dts/adi/sc59x-64.dtsi        |  2 +-
 arch/arm64/configs/sc598-som-ezkit_defconfig |  3 +-
 drivers/rpmsg/adi_rpmsg.c                    | 13 +++----
 drivers/soc/adi/mach-sc5xx/sec.c             | 37 +-------------------
 6 files changed, 18 insertions(+), 54 deletions(-)

diff --git a/arch/arm64/boot/dts/adi/sc598-som-ezkit.dts b/arch/arm64/boot/dts/adi/sc598-som-ezkit.dts
index 85c686ff08e0..924c42bce367 100644
--- a/arch/arm64/boot/dts/adi/sc598-som-ezkit.dts
+++ b/arch/arm64/boot/dts/adi/sc598-som-ezkit.dts
@@ -16,6 +16,7 @@ sound {
 			compatible = "adi,sc5xx-asoc-card";
 			adi,cpu-dai = <&i2s4>;
 			adi,codec = <&adau1962>, <&adau1979>;
+			status = "disabled";
 		};
 	};
 };
@@ -280,11 +281,11 @@ dp83867: ethernet-phy@0 {
 &i2s4 {
 	pinctrl-names = "default";
 	pinctrl-0 = <&sru_dai1>;
-	status = "okay";
+	status = "disabled";
 };
 
 &sru_ctrl_dai1 {
-	status = "okay";
+	status = "disabled";
 
 	sru_dai1: sru_dai1_mux {
 		route {
diff --git a/arch/arm64/boot/dts/adi/sc598-som.dtsi b/arch/arm64/boot/dts/adi/sc598-som.dtsi
index 3cc69b7aa2da..1620934bf48e 100644
--- a/arch/arm64/boot/dts/adi/sc598-som.dtsi
+++ b/arch/arm64/boot/dts/adi/sc598-som.dtsi
@@ -22,13 +22,13 @@ memory@90000000 {
 		reg = <0x90000000 0x0e000000>;
 	};
 
-	memory@20040000 {
-		device_type = "memory";
-		reg = <0x20040000 0x40000>;
-	};
+//	memory@20040000 {
+//		device_type = "memory";
+//		reg = <0x20040000 0x40000>;
+//	};
 
 	reserved-memory {
-		//sram1_res: sram1-reserved@20040000 {
+//		sram1_res: sram1-reserved@20040000 {
 //			compatible = "adi,sram-access";
 //			reg = <0x20040000 0x40000>;
 //		};
@@ -254,7 +254,7 @@ &i2c1 {
 };
 
 &i2c2 {
-	status = "okay";
+	status = "disabled";
 	pinctrl-names = "default";
 	pinctrl-0 = <&i2c2_pins>;
 
diff --git a/arch/arm64/boot/dts/adi/sc59x-64.dtsi b/arch/arm64/boot/dts/adi/sc59x-64.dtsi
index 72b3ad430f28..4c6181ba517e 100644
--- a/arch/arm64/boot/dts/adi/sc59x-64.dtsi
+++ b/arch/arm64/boot/dts/adi/sc59x-64.dtsi
@@ -245,7 +245,7 @@ sram-controller@31080000 {
 			reg = <0x31080000 0x100>;
 			adi,sram = <&sram0>, <&sram1>;
 			interrupts = <GIC_SPI 10 IRQ_TYPE_LEVEL_HIGH>;
-			status = "disabled";
+			status = "okay";
 		};
 
 		sram_mmap: sram-mmap@0 {
diff --git a/arch/arm64/configs/sc598-som-ezkit_defconfig b/arch/arm64/configs/sc598-som-ezkit_defconfig
index 041abcf35b61..d07c3a96ed7f 100644
--- a/arch/arm64/configs/sc598-som-ezkit_defconfig
+++ b/arch/arm64/configs/sc598-som-ezkit_defconfig
@@ -366,4 +366,5 @@ CONFIG_BLK_DEV_SD=y
 CONFIG_BLK_DEV_BSG=y
 CONFIG_USB_STORAGE=y
 CONFIG_SG_POOL=y
-CONFIG_RPMSG_CTRL=y
\ No newline at end of file
+CONFIG_RPMSG_CTRL=y
+CONFIG_RPMSG_ADI=y
diff --git a/drivers/rpmsg/adi_rpmsg.c b/drivers/rpmsg/adi_rpmsg.c
index 3540c7f68853..fc3069eca672 100644
--- a/drivers/rpmsg/adi_rpmsg.c
+++ b/drivers/rpmsg/adi_rpmsg.c
@@ -194,9 +194,7 @@ static void adi_rproc_virtio_del_vqs(struct virtio_device *vdev)
 
 static int adi_rpmsg_virtio_find_vqs(struct virtio_device *vdev, unsigned int nvqs,
 				 struct virtqueue *vqs[],
-				 vq_callback_t *callbacks[],
-				 const char * const names[],
-				 const bool *ctx,
+				 struct virtqueue_info *vqs_info,
 				 struct irq_affinity *desc)
 {
 
@@ -206,13 +204,13 @@ static int adi_rpmsg_virtio_find_vqs(struct virtio_device *vdev, unsigned int nv
 		return -EINVAL;
 
 	for (i = 0; i < nvqs; ++i) {
-		if (!names[i]) {
+		if (!vqs_info[i].name) {
 			vqs[i] = NULL;
 			continue;
 		}
 
-		vqs[i] = adi_find_vq(vdev, i, callbacks[i], names[i],
-				    ctx ? ctx[i] : false);
+		vqs[i] = adi_find_vq(vdev, i, vqs_info[i].callback, vqs_info[i].name,
+				    vqs_info[i].ctx ? vqs_info[i].ctx : false);
 		if (IS_ERR(vqs[i])) {
 			ret = PTR_ERR(vqs[i]);
 			goto error;
@@ -560,7 +558,7 @@ static int adi_rpmsg_probe(struct platform_device *pdev)
 	return ret;
 }
 
-static int adi_rpmsg_remove(struct platform_device *pdev)
+void adi_rpmsg_remove(struct platform_device *pdev)
 {
 	struct adi_rpmsg_channel *rpchan = platform_get_drvdata(pdev);
 	struct device *dev = &pdev->dev;
@@ -575,7 +573,6 @@ static int adi_rpmsg_remove(struct platform_device *pdev)
 		size = rpchan->vring[0].size + rpchan->vring[1].size;
 		dma_free_coherent(dev, size, rpchan->vring[0].va, rpchan->vring[0].da);
 	}
-	return 0;
 }
 
 static const struct of_device_id adi_rpmsg_dt_ids[] = {
diff --git a/drivers/soc/adi/mach-sc5xx/sec.c b/drivers/soc/adi/mach-sc5xx/sec.c
index bdeb0f8d9a3b..3856e17851ca 100644
--- a/drivers/soc/adi/mach-sc5xx/sec.c
+++ b/drivers/soc/adi/mach-sc5xx/sec.c
@@ -34,12 +34,11 @@ struct adi_sec {
 
 void adi_sec_writel(u32 val, struct adi_sec *rcu, int offset)
 {
-	writel(val, rcu->ioaddr + offset);
 }
 
 u32 adi_sec_readl(struct adi_sec *rcu, int offset)
 {
-	return readl(rcu->ioaddr + offset);
+	return 0;
 }
 
 void sec_raise_irq(struct adi_sec *sec, unsigned int irq)
@@ -209,40 +208,6 @@ static int adi_sec_probe(struct platform_device *pdev)
 
 	adi_sec->ioaddr = base;
 
-	/* Disable SYSCD_RESETb and clear RCU reset status */
-	adi_rcu_writel(0x00, adi_rcu, ADI_RCU_REG_CTL);
-	adi_rcu_writel(0x0f, adi_rcu, ADI_RCU_REG_STAT);
-
-	/* Reset SEC */
-	adi_sec_writel(0x02, adi_sec, ADI_SEC_REG_GCTL);
-	adi_sec_writel(0x02, adi_sec, ADI_SEC_REG_FCTL);
-
-	/* Initialize each core */
-	for (cores = 0; cores < adi_sec->cores; ++cores) {
-		adi_sec_writel(0x02, adi_sec,
-			       ADI_SEC_REG_CCTL_BASE + (cores +
-							1) *
-			       ADI_SEC_CCTL_SIZE);
-	}
-	udelay(100);
-
-	/* Enable SEC fault event */
-	adi_sec_writel(0x01, adi_sec, ADI_SEC_REG_GCTL);
-
-	/* ANOMALY 36100004 spurious external fault event occurs when FCTL is
-	 * re-programmed when active fault is not cleared
-	 */
-	adi_sec_writel(0xc0, adi_sec, ADI_SEC_REG_FCTL);
-	adi_sec_writel(0xc1, adi_sec, ADI_SEC_REG_FCTL);
-
-	/* Enable SYSCD_RESETb input */
-	adi_rcu_writel(0x100, adi_rcu, ADI_RCU_REG_CTL);
-
-#ifdef CONFIG_ADI_WATCHDOG
-	/* @todo verify sec watchdog event number, make device tree based */
-	sec_enable_ssi(adi_sec, 3, true, true);
-#endif
-
 	return 0;
 
       free_rcu:
-- 
2.34.1

